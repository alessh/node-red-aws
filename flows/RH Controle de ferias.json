[{"id":"c6d86b83.360a78","type":"MSSQL","z":"c887d9a.5ebdb28","mssqlCN":"2461fe59.631282","name":"funcionario","query":"select \tdistinct top 10\n\t\t--cadfun.fun_empresa as empresa,\n\t\tcadfun.fun_pis_numero as pis,\n\t\tcadfun.fun_codigo as matricula,\n\t\tcadfun.fun_descricao as nome, \n\t\tcadfun.fun_data_de_admissao as admissao\nfrom cadfun\n{{#payload}}\nwhere cadfun.fun_empresa = {{payload}}\n{{/payload}}","outField":"payload","x":130,"y":1900,"wires":[["1f83f188.d2758e"]]},{"id":"1f83f188.d2758e","type":"split","z":"c887d9a.5ebdb28","name":"","splt":"","x":290,"y":1900,"wires":[["a2d65547.56cfb8"]]},{"id":"f92cdf0.3bb4d2","type":"function","z":"c887d9a.5ebdb28","name":"vertex.add('rh.funcionario')","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB();\n\nmsg.payload.id = uuid.v1();\nmsg.payload.type = 'vertex:rh.funcionario';\nmsg.payload.demissao = null;\n\nvar params = {\n    TableName : 'graphdb',\n    Item: {\n        id: { \"S\": msg.payload.id },\n        type: { \"S\": msg.payload.type },\n        pis: { \"S\": msg.payload.pis },\n        matricula: { \"S\": msg.payload.matricula.toString() },\n        nome: { \"S\": msg.payload.nome },\n        admissao: { \"S\": moment(msg.payload.admissao).utc().format('YYYY-MM-DD') },\n        demissao: { \"NULL\": true }\n    }\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send(this);\n    }\n}\n\ndynamodb.putItem(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":1140,"y":1940,"wires":[["1e661af4.7a3d65"]]},{"id":"b15b2531.433338","type":"comment","z":"c887d9a.5ebdb28","name":"Inicialização dos Dados","info":"Inicializa collection ```ferias``` com dados importados do cadastro de funcionários do Flextime","x":140,"y":1560,"wires":[]},{"id":"d9c2f38.665411","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('rh.ferias') CRIADO","active":true,"console":"false","complete":"true","x":1740,"y":2200,"wires":[]},{"id":"4f49b959.5db548","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":1620,"wires":[["c3cd063e.ef91d8"]]},{"id":"c3cd063e.ef91d8","type":"MSSQL","z":"c887d9a.5ebdb28","mssqlCN":"2461fe59.631282","name":"empresa","query":"SELECT DISTINCT\n\t[emp_codigo]\t\tAS codigo\n\t,[emp_cgc]\t\t\tAS cnpj\n\t,[emp_descricao]\tAS nome\n\t,[emp_endereco]\t\tAS endereco\n\t,[emp_bairro]\t\tAS bairro\n\t,[emp_cidade]\t\tAS cidade\n\t,[emp_estado]\t\tAS estado\n\t,[emp_cep]\t\t\tAS cep\n\t--,[emp_inscricao_estadual]\tAS inscricao_estadual\n\t--,[emp_cei]\t\t\tAS cei\n\t--,[emp_tipo_de_empresa]\tAS tipo_empresa\n\t--,[emp_atividade_economica]\tAS atividade\nFROM [FLEXTIME].[dbo].[cademp]\n{{#payload}}\nWHERE [emp_codigo] = {{{payload}}}\n{{/payload}}","outField":"payload","x":140,"y":1680,"wires":[["a04b6298.431e6"]]},{"id":"a04b6298.431e6","type":"split","z":"c887d9a.5ebdb28","name":"","splt":"","x":290,"y":1680,"wires":[["fc225343.8a071"]]},{"id":"fc225343.8a071","type":"function","z":"c887d9a.5ebdb28","name":"vertex('org.empresa').has('cnpj', payload.cnpj, FIND_FIRST)","func":"var uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"graphdb\",\n    IndexName: \"type-index\",\n    KeyConditionExpression: \"#t = :t\",   \n    ExpressionAttributeNames: {\n        \"#t\": \"type\",\n        \"#k_cnpj\": 'cnpj'\n    },\n    ExpressionAttributeValues: { \n        \":t\": \"vertex:org.empresa\",\n        \":v_cnpj\": msg.payload.cnpj.toString()\n    },\n    FilterExpression: \"#k_cnpj = :v_cnpj\",\n    ExclusiveStartKey: msg.ExclusiveStartKey || null,\n    Limit: flow.get('config').limit || 1\n}\n\nvar result = function(err, data) {\n    console.log(data)\n    if (err) {\n        node.status({fill:\"red\",shape:\"ring\",text:\"query error\"});\n        node.error(\"Unable to query. Error:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Query succeeded.\");\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query succeeded.\"});\n        \n        msg.count = msg.count + data.Count || data.Count\n        msg.ExclusiveStartKey = data.LastEvaluatedKey || null;\n        \n        node.send([\n            data.LastEvaluatedKey ? this : null, \n            data.Count > 0 ? { payload: data.Items } : null, \n            data.Count === 0 && !data.LastEvaluatedKey && msg.count === 0 ? this : null\n        ]);\n    }\n}\n\ndynamodb.query(params, result.bind(msg));\n","outputs":"3","noerr":0,"x":600,"y":1680,"wires":[["57a76d56.8b0b44"],["efd8d518.6c90d8"],["363df001.5252a","1d42e4f6.d544cb"]]},{"id":"363df001.5252a","type":"function","z":"c887d9a.5ebdb28","name":"vertex.add('org.empresa')","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nmsg.payload.id = uuid.v1();\nmsg.payload.type = 'vertex:org.empresa';\n\nvar params = {\n    TableName : 'graphdb',\n    Item: msg.payload\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send(this);\n    }\n}\n\nvar ret = dynamodb.put(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":1140,"y":1720,"wires":[["85d57e1d.4d164","f2d9e3a.a98aa2"]]},{"id":"f2d9e3a.a98aa2","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('org.empresa') CRIADO","active":true,"console":"false","complete":"payload","x":1470,"y":1720,"wires":[]},{"id":"6d0b2113.32e6d","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('org.empresa') EXISTE","active":true,"console":"false","complete":"payload","x":1150,"y":1660,"wires":[]},{"id":"a2d65547.56cfb8","type":"function","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario').has('pis', payload.pis, FIND_FIRST)","func":"var uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"graphdb\",\n    IndexName: \"type-index\",\n    KeyConditionExpression: \"#t = :t\",   \n    ExpressionAttributeNames: {\n        \"#t\": \"type\",\n        \"#k_pis\": 'pis'\n    },\n    ExpressionAttributeValues: { \n        \":t\": \"vertex:rh.funcionario\",\n        \":v_pis\": msg.payload.pis.toString()\n    },\n    ProjectionExpression: \"id, pis, nome\",\n    FilterExpression: \"#k_pis = :v_pis\",\n    ExclusiveStartKey: msg.ExclusiveStartKey || null,\n    Limit: flow.get('config').limit || 1\n}\n\nvar result = function(err, data) {\n    console.log(data)\n    if (err) {\n        node.status({fill:\"red\",shape:\"ring\",text:\"query error\"});\n        node.error(\"Unable to query. Error:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Query succeeded.\");\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query succeeded.\"});\n        \n        msg.count = msg.count + data.Count || data.Count\n        msg.ExclusiveStartKey = data.LastEvaluatedKey || null;\n        \n        node.send([\n            data.Count > 0 ? null : data.LastEvaluatedKey ? this : null, // FIND_FIRST\n            data.Count > 0 ? { payload: data.Items } : null, \n            data.Count === 0 && !data.LastEvaluatedKey && msg.count === 0 ? this : null\n        ]);\n    }\n}\n\ndynamodb.query(params, result.bind(msg));\n","outputs":"3","noerr":0,"x":600,"y":1900,"wires":[["9f01aaa3.65ea38"],["d69e0881.d1b8b8"],["72193445.7afcec","f92cdf0.3bb4d2"]]},{"id":"f5ce43c3.d4b7c","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario') EXISTE","active":true,"console":"false","complete":"true","x":1150,"y":1900,"wires":[]},{"id":"85d57e1d.4d164","type":"function","z":"c887d9a.5ebdb28","name":"delay","func":"setTimeout(function() {\n    node.send(msg);\n}, 150 * msg.payload.codigo);\n","outputs":1,"noerr":0,"x":1390,"y":1680,"wires":[[]]},{"id":"dd6c4322.fc643","type":"function","z":"c887d9a.5ebdb28","name":"edge.add('rh.funcionario')[]","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName : 'graphdb',\n    Item: {\n        id: msg.payload.id,\n        type: 'edge:rh.funcionario',\n        vertex: []\n    }\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send(this);\n    }\n}\n\nvar ret = dynamodb.put(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":1780,"y":2060,"wires":[[]]},{"id":"45b453ef.8c339c","type":"function","z":"c887d9a.5ebdb28","name":"edge.add('rh.funcioario')","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName : 'graphdb',\n    Key: {\n        id:  msg.empresa.id.toString(),\n        type: \"edge:rh.funcionario\"\n    },\n    UpdateExpression : \"SET #attr = list_append(#attr, :val)\",\n    ExpressionAttributeNames : {\n      \"#attr\" : \"vertex\"\n    },\n    ExpressionAttributeValues : {\n      \":val\" : [ msg.payload.id.toString() ]\n    },\n    ReturnValues: 'ALL_NEW'\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send(this);\n    }\n}\n\nvar ret = dynamodb.update(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":1230,"y":2160,"wires":[["b702768f.885a08","bb6e009.25ea5"]]},{"id":"72193445.7afcec","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario') NAO EXISTE, CRIAR","active":true,"console":"false","complete":"true","x":1190,"y":1980,"wires":[]},{"id":"7dba49c9.07a708","type":"function","z":"c887d9a.5ebdb28","name":"edge.add('org.empresa')","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName : 'graphdb',\n    Item: {\n        id: msg.payload.id,\n        type: 'edge:org.empresa',\n        vertex: [ msg.empresa.id ]\n    }\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send(this);\n    }\n}\n\nvar ret = dynamodb.put(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":1130,"y":2100,"wires":[["45b453ef.8c339c","9c6088fb.59c368"]]},{"id":"bb6e009.25ea5","type":"function","z":"c887d9a.5ebdb28","name":"vertex.add('rh.ferias')","func":"var moment = global.get('moment');\nvar uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\n/** inicializa estrutura de ferias **/ \nvar edges = {\n    id: msg.payload.id, \n    type: \"edge:rh.ferias\", \n    vertex: []\n};\n\nvar aquisicao_inicial = moment(msg.payload.admissao).hours(0).minutes(0).seconds(0).milliseconds(0);\n\nasync.whilst(\n    function() { return aquisicao_inicial < moment() }, \n    function(callback) {\n        var periodo_inicial = aquisicao_inicial.clone();\n        \n        async.waterfall([\n            function(wcallback) {\n                var ferias = {\n                    id: uuid.v1(),\n                    type: 'vertex:rh.ferias',\n                    inicio: periodo_inicial.utc().format(),\n                    termino: periodo_inicial.clone().subtract(1, 'day').add(1, 'years').utc().format(),\n                    limite: periodo_inicial.clone().subtract(1, 'day').add(1, 'years').subtract(1, 'months').format(),\n                    dias: 30,\n                    realizado: periodo_inicial.year() >= 2013 ? false : true\n                }\n                \n                edges.vertex.push(ferias.id);\n                \n                var params = {\n                    TableName : 'graphdb',\n                    Item: ferias\n                }\n                dynamodb.put(params, function(err) {\n                    if (err) {\n                        node.error(err);\n                        wcallback(err);\n                    } else {\n                        wcallback(null, msg, edges, ferias);\n                    }\n                });\n            },\n            function(msg, edges, ferias, wcallback) {\n                var params = {\n                    TableName : 'graphdb',\n                    Item: {\n                        id: ferias.id, \n                        type: 'edge:rh.funcionario', \n                        vertex: [msg.payload.id]\n                    }\n                }\n \n                dynamodb.put(params, function(err) {\n                    if (err) {\n                        node.error(err);\n                        wcallback(err);\n                    } else {\n                        wcallback(null, msg, edges, ferias);\n                    }\n                });\n            }\n        ], function (err, msg, edges, ferias) {\n            if (err) {\n                node.error(err);\n                callback(err);\n            }\n            aquisicao_inicial.add(1, 'years');\n            \n            callback(null, aquisicao_inicial, edges);\n        });\n    \n    },\n    function (err, aquisicao, edges) {\n        if (err) {\n            node.error(err);\n            return;\n        }\n        \n        var params = {\n            TableName : 'graphdb',\n            Item: edges\n        }\n\n        dynamodb.put(params, function(err, data) {\n            if (err) {\n                node.log(err);\n                node.error(err);\n            } else {\n                node.send({payload: 'vertex(\"rh.ferias\") CRIADO'});\n            }\n        });\n\n    }\n);\n\n","outputs":1,"noerr":0,"x":1480,"y":2200,"wires":[["d9c2f38.665411"]]},{"id":"9c6088fb.59c368","type":"debug","z":"c887d9a.5ebdb28","name":"edge('rh.funcionario').to('org.empresa') CRIADO","active":true,"console":"false","complete":"true","x":1470,"y":2100,"wires":[]},{"id":"1e661af4.7a3d65","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario') CRIADO","active":true,"console":"false","complete":"true","x":1470,"y":1940,"wires":[]},{"id":"b702768f.885a08","type":"debug","z":"c887d9a.5ebdb28","name":"edge('org.empresa').to('rh.funcionario') CRIADO","active":false,"console":"false","complete":"true","x":1570,"y":2160,"wires":[]},{"id":"cb874509.c1d848","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"vertex:org.empresa","payloadType":"str","repeat":"","crontab":"","once":false,"x":150,"y":2300,"wires":[["e20386be.273df8"]]},{"id":"e20386be.273df8","type":"function","z":"c887d9a.5ebdb28","name":"vertex(payload)","func":"var uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"graphdb\",\n    IndexName: \"type-index\",\n    KeyConditionExpression: \"#t = :t\",   \n    ExpressionAttributeNames: {\n        \"#t\": \"type\"\n    },\n    ExpressionAttributeValues: { \n        \":t\": msg.payload\n    },\n    ExclusiveStartKey: msg.ExclusiveStartKey || null,\n    Limit: flow.get('config').limit || 1\n}\n\nvar result = function(err, data) {\n    console.log(data)\n    if (err) {\n        node.status({fill:\"red\",shape:\"ring\",text:\"query error\"});\n        node.error(\"Unable to query. Error:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Query succeeded.\");\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query succeeded.\"});\n        if (data.Count > 0) {\n            if (data.LastEvaluatedKey) {\n                msg.found = msg.found !== undefined ? msg.found + data.Count : data.Count;\n                msg.ExclusiveStartKey = data.LastEvaluatedKey;\n                node.send([this, { payload: data.Items }, null]);\n            } else {\n                node.send([null, { payload: data.Items }, null]);\n            }\n        } else {\n            node.log(JSON.stringify(data, null, 2));\n            if (data.LastEvaluatedKey) {\n                msg.ExclusiveStartKey = data.LastEvaluatedKey;\n                node.send([this, null, null]);\n            } else {\n                node.send([null, null, this]);\n            }\n        }\n    }\n}\n\ndynamodb.query(params, result.bind(msg));\n","outputs":"3","noerr":0,"x":520,"y":2400,"wires":[["baebe9b3.a8c878"],["55cd9481.96c57c"],["c30f245d.3545d8"]]},{"id":"55cd9481.96c57c","type":"split","z":"c887d9a.5ebdb28","name":"","splt":"","x":730,"y":2400,"wires":[["431a2256.c1b16c"]]},{"id":"c30f245d.3545d8","type":"debug","z":"c887d9a.5ebdb28","name":"vertex(payload) NAO EXISTE","active":true,"console":"false","complete":"payload","x":810,"y":2440,"wires":[]},{"id":"ec73f8fd.e79dd8","type":"debug","z":"c887d9a.5ebdb28","name":"vertex(payload) EXCLUIDO","active":true,"console":"false","complete":"payload","x":1180,"y":2400,"wires":[]},{"id":"431a2256.c1b16c","type":"function","z":"c887d9a.5ebdb28","name":"vertex.del(payload.id)","func":"var aws = global.get('aws');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB();\n\nvar params = {\n    TableName : 'graphdb',\n    Key: {\n        id: { \"S\": msg.payload.id },\n        type: { \"S\": msg.payload.type }\n    },\n    ReturnValues: \"ALL_OLD\"\n}\n\nvar result = function(err, data) {\n    if (err) {\n        node.error(err);\n    } else {\n        node.send({payload: data});\n    }\n}\n\ndynamodb.deleteItem(params, result.bind(msg));\n","outputs":1,"noerr":0,"x":920,"y":2400,"wires":[["ec73f8fd.e79dd8"]]},{"id":"b1cabbd1.3bf248","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"vertex:rh.ferias","payloadType":"str","repeat":"","crontab":"","once":false,"x":140,"y":2340,"wires":[["e20386be.273df8"]]},{"id":"93f9fc9b.56425","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"vertex:rh.funcionario","payloadType":"str","repeat":"","crontab":"","once":false,"x":150,"y":2380,"wires":[["e20386be.273df8"]]},{"id":"7e638ac0.f6ead4","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"edge:rh.funcionario","payloadType":"str","repeat":"","crontab":"","once":false,"x":150,"y":2460,"wires":[["e20386be.273df8"]]},{"id":"a0196899.a520b8","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"edge:org.empresa","payloadType":"str","repeat":"","crontab":"","once":false,"x":150,"y":2420,"wires":[["e20386be.273df8"]]},{"id":"a37c36f3.c9d5f8","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"edge:rh.ferias","payloadType":"str","repeat":"","crontab":"","once":false,"x":130,"y":2500,"wires":[["e20386be.273df8"]]},{"id":"888d0604.736e38","type":"comment","z":"c887d9a.5ebdb28","name":"Limpeza dos Dados","info":"","x":130,"y":2260,"wires":[]},{"id":"c6d38e63.19d12","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"HELIO","payloadType":"str","repeat":"","crontab":"","once":false,"x":110,"y":2600,"wires":[["ac56db22.90f7a8"]]},{"id":"ac56db22.90f7a8","type":"function","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario').has('nome', payload, BEGIN_WITH | FIND_FIRST)","func":"var uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"graphdb\",\n    IndexName: \"type-index\",\n    KeyConditionExpression: \"#t = :t\",   \n    ExpressionAttributeNames: {\n        \"#t\": \"type\",\n        \"#n\": \"nome\"\n    },\n    ExpressionAttributeValues: { \n        \":t\": \"vertex:rh.funcionario\",\n        \":n\": msg.payload\n    },   \n    FilterExpression: \"begins_with(#n, :n)\",\n    ProjectionExpression: \"id, pis, nome\",\n    ExclusiveStartKey: msg.ExclusiveStartKey || null,\n    Limit: flow.get('config').limit || 1\n}\n\n/*    \n    FilterExpression: \"contains(#n, :n)\",\n    ExpressionAttributeNames: {\n        \"#k_vertex\": 'vertex',\n        \"#k_nome\": 'nome'\n    },\n    ExpressionAttributeValues: { \n        \":v_vertex\": 'vertex:rh.funcionario',\n        \":v_nome\": msg.payload.toString()\n    }, \n    FilterExpression: \"contains(#k_nome, :v_nome)\",    \n    ExpressionAttributeNames: {\n        \"#k_nome\": 'nome'\n    },\n\n    ExpressionAttributeValues: { \n        \":v_nome\": msg.payload.toString()\n    },   \n    FilterExpression: \"contains(nome, :v_nome)\",  \n    ProjectionExpression: \"id, pis, nome\",\n*/\n//HELIO HIROAKI TODA\n//begins_with(#k_nome, :v_nome)\n//#k_nome = :v_nome\n\nvar result = function(err, data) {\n    console.log(data)\n    if (err) {\n        node.status({fill:\"red\",shape:\"ring\",text:\"query error\"});\n        node.error(\"Unable to query. Error:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Query succeeded.\");\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query succeeded.\"});\n        if (data.Count === 1) {\n            this.payload = data.Items[0];\n            node.send([null, this, null]);\n        } else {\n            if (data.LastEvaluatedKey === null) {\n                node.send([null, null, this]);\n            } else {\n                msg.count = msg.count !== undefined ? ++msg.count : 1;\n                msg.ExclusiveStartKey = data.LastEvaluatedKey;\n                node.send([this, null, null]);\n            }\n        }\n    }\n}\n\ndynamodb.query(params, result.bind(msg));\n","outputs":"3","noerr":0,"x":650,"y":2600,"wires":[["7ad02abd.7d4364","f50e150d.59e158"],["a8fdf2c.2dade1"],["26f733ee.7207fc"]]},{"id":"26f733ee.7207fc","type":"debug","z":"c887d9a.5ebdb28","name":"NAO ENCONTRADO","active":true,"console":"false","complete":"payload","x":1240,"y":2640,"wires":[]},{"id":"a8fdf2c.2dade1","type":"debug","z":"c887d9a.5ebdb28","name":"ENCONTRADO","active":true,"console":"false","complete":"true","x":1220,"y":2600,"wires":[]},{"id":"7ad02abd.7d4364","type":"function","z":"c887d9a.5ebdb28","name":"forward","func":"\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":2560,"wires":[["ac56db22.90f7a8"]]},{"id":"f50e150d.59e158","type":"debug","z":"c887d9a.5ebdb28","name":"PROXIMO(S) REGISTRO(S)","active":true,"console":"false","complete":"true","x":1260,"y":2560,"wires":[]},{"id":"d63e9143.a54bb","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"BRITO","payloadType":"str","repeat":"","crontab":"","once":false,"x":110,"y":2760,"wires":[["7f132127.1802"]]},{"id":"7f132127.1802","type":"function","z":"c887d9a.5ebdb28","name":"vertex('rh.funcionario').has('nome', payload, CONTAINS | FIND_FIRST)","func":"var uuid = global.get('uuid');\nvar aws = global.get('aws');\nvar async = global.get('async');\n\naws.config.update(flow.get('config').credentials);\n\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"graphdb\",\n    IndexName: \"type-index\",\n    KeyConditionExpression: \"#t = :t\",   \n    ExpressionAttributeNames: {\n        \"#t\": \"type\",\n        \"#n\": \"nome\"\n    },\n    ExpressionAttributeValues: { \n        \":t\": \"vertex:rh.funcionario\",\n        \":n\": msg.payload\n    },   \n    FilterExpression: \"contains(#n, :n)\",\n    ProjectionExpression: \"id, pis, nome\",\n    ExclusiveStartKey: msg.ExclusiveStartKey || null,\n    Limit: flow.get('config').limit || 1\n}\n\n/*    \n    FilterExpression: \"contains(#n, :n)\",\n    ExpressionAttributeNames: {\n        \"#k_vertex\": 'vertex',\n        \"#k_nome\": 'nome'\n    },\n    ExpressionAttributeValues: { \n        \":v_vertex\": 'vertex:rh.funcionario',\n        \":v_nome\": msg.payload.toString()\n    }, \n    FilterExpression: \"contains(#k_nome, :v_nome)\",    \n    ExpressionAttributeNames: {\n        \"#k_nome\": 'nome'\n    },\n\n    ExpressionAttributeValues: { \n        \":v_nome\": msg.payload.toString()\n    },   \n    FilterExpression: \"contains(nome, :v_nome)\",  \n    ProjectionExpression: \"id, pis, nome\",\n*/\n//HELIO HIROAKI TODA\n//begins_with(#k_nome, :v_nome)\n//#k_nome = :v_nome\n\nvar result = function(err, data) {\n    console.log(data)\n    if (err) {\n        node.status({fill:\"red\",shape:\"ring\",text:\"Query error.\"});\n        node.error(\"Unable to query. Error:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Query succeeded.\");\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query succeeded.\"});\n        if (data.Count === 1) {\n            this.payload = data.Items[0];\n            node.send([null, this, null]);\n        } else {\n            if (data.LastEvaluatedKey === null) {\n                node.send([null, null, this]);\n            } else {\n                msg.count = msg.count !== undefined ? ++msg.count : 1;\n                msg.ExclusiveStartKey = data.LastEvaluatedKey;\n                node.send([this, null, null]);\n            }\n        }\n    }\n}\n\ndynamodb.query(params, result.bind(msg));\n","outputs":"3","noerr":0,"x":640,"y":2760,"wires":[["bd7f80b8.53b2d","8ab42a4c.96ce68"],["90ac3126.48b0c"],["a123c80d.3e0c78"]]},{"id":"a123c80d.3e0c78","type":"debug","z":"c887d9a.5ebdb28","name":"NAO ENCONTRADO","active":true,"console":"false","complete":"payload","x":1240,"y":2800,"wires":[]},{"id":"90ac3126.48b0c","type":"debug","z":"c887d9a.5ebdb28","name":"ENCONTRADO","active":true,"console":"false","complete":"true","x":1220,"y":2760,"wires":[]},{"id":"bd7f80b8.53b2d","type":"function","z":"c887d9a.5ebdb28","name":"forward","func":"\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":2720,"wires":[["7f132127.1802"]]},{"id":"8ab42a4c.96ce68","type":"debug","z":"c887d9a.5ebdb28","name":"PROXIMO(S) REGISTRO(S)","active":true,"console":"false","complete":"true","x":1260,"y":2720,"wires":[]},{"id":"ca96db47.3cbe18","type":"comment","z":"c887d9a.5ebdb28","name":"Exemplos de Consultas","info":"- vertices: (vertex) representa um registro no banco de dados\n- aresta: (edge) representa uma conexão/relação/link entre 2 ou mais vertices\n\ncaracterísticas dos vertices (vertex):\n\n- podem ter propriedades do tipo String, Numero, Boolean, List, Map e Object\n- nome de propriedade 'type' e 'id' são palavras reservadas\n- cada vertice tem uma 'etiqueta' [ vertex( <etiqueta> ) ] que identifica o tipo de conteúdo que armazena e serve para restringir a busca e agrupa-los de acordo informação que representam. Por exemplo: cada vertice com a etiqueta 'rh.funcionario' representa os dados de um funcionário, tais como nome, numero do pis, etc.\n\ncaracterística das arestas (edges):\n\n- tambem podem conter as mesmas propriedades que os vertices\n- nome de propriedade 'type' e 'id' são palavras reservadas\n- cada aresta esta associadas a pelo menos 2 vertice, 1 vertice de origem e 1 ou mais vertices de destino. Por exemplo um dado vertice do tipo 'rh.funcionario' pode estar relacionado a um outro vertice do tipo 'org.empresa' atraves de uma aresta que tenha como origem 'rh.funcionario' e destino 'org.empresa': vertex('rh.funcionario').edge('org.empresa')\n- uma aresta pode ter direção, IN | OUT, indicando a direção do relacionamento entre 2 vertices. Por exemplo: vertex('rh.funcionario').egde('org.empresa', OUT) ou vertex('org.empresa').edge('rh.funcionario', IN)\n- cada aresta tem uma 'etiqueta' [ edge( <etiqueta> ) ] que identifica o tipo de conteúdo que armazena e serve para restringir a busca e agrupa-los de acordo informação que representam. Por exemplo: a aresta 'rh.funcionario' associado a um vertice 'org.empresa' [ vertex('org.empresa').edge('rh.funcionario') ] retorna os vertices que representam todos os funcionários de uma determinada empresa.\n","x":140,"y":2540,"wires":[]},{"id":"7a3cb29e.beec1c","type":"comment","z":"c887d9a.5ebdb28","name":"Configuracoes","info":"","x":120,"y":1420,"wires":[]},{"id":"e895bf87.292d2","type":"inject","z":"c887d9a.5ebdb28","name":"init","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":true,"x":110,"y":1480,"wires":[["9de3bfdf.bb37c"]]},{"id":"9de3bfdf.bb37c","type":"function","z":"c887d9a.5ebdb28","name":"setup","func":"flow.set('config', {\n    credentials: { \n        region: 'us-east-1',\n        accessKeyId: 'AKIAITORMWJYRXO2X6VQ', \n        secretAccessKey: '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' \n    },\n    limit: 5\n});\n\nmsg.payload = flow.get('config');\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":1480,"wires":[["79344f62.1067c"]]},{"id":"79344f62.1067c","type":"debug","z":"c887d9a.5ebdb28","name":"CONFIGURACOES","active":true,"console":"false","complete":"payload","x":510,"y":1480,"wires":[]},{"id":"baebe9b3.a8c878","type":"function","z":"c887d9a.5ebdb28","name":"loop","func":"msg.loop = msg.loop !== undefined ? ++msg.loop : 1;\n\nreturn msg;","outputs":1,"noerr":0,"x":525,"y":2375,"wires":[["e20386be.273df8","ef73fad8.462298"]]},{"id":"9f01aaa3.65ea38","type":"function","z":"c887d9a.5ebdb28","name":"loop","func":"msg.loop = msg.loop !== undefined ? ++msg.loop : 1;\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":1875,"wires":[["a2d65547.56cfb8","b0e3b9d1.725fb8"]]},{"id":"57a76d56.8b0b44","type":"function","z":"c887d9a.5ebdb28","name":"loop","func":"msg.loop = msg.loop !== undefined ? ++msg.loop : 1;\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":1655,"wires":[["fc225343.8a071"]]},{"id":"ef73fad8.462298","type":"debug","z":"c887d9a.5ebdb28","name":"LOOP","active":true,"console":"false","complete":"true","x":730,"y":2360,"wires":[]},{"id":"efd8d518.6c90d8","type":"split","z":"c887d9a.5ebdb28","name":"","splt":"","x":930,"y":1680,"wires":[["6d0b2113.32e6d","85d57e1d.4d164"]]},{"id":"1d42e4f6.d544cb","type":"debug","z":"c887d9a.5ebdb28","name":"vertex('org.empresa') NAO EXISTE, CRIAR","active":true,"console":"false","complete":"payload","x":1190,"y":1760,"wires":[]},{"id":"d69e0881.d1b8b8","type":"split","z":"c887d9a.5ebdb28","name":"","splt":"","x":930,"y":1900,"wires":[["f5ce43c3.d4b7c"]]},{"id":"f8a46949.786bb8","type":"inject","z":"c887d9a.5ebdb28","name":"","topic":"","payload":"1","payloadType":"str","repeat":"","crontab":"","once":false,"x":110,"y":1840,"wires":[["c6d86b83.360a78"]]},{"id":"cf008379.b8f66","type":"inject","z":"c887d9a.5ebdb28","name":"todas","topic":"","payload":"","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":1740,"wires":[["c3cd063e.ef91d8"]]},{"id":"d3b465f8.3443d8","type":"inject","z":"c887d9a.5ebdb28","name":"todas","topic":"","payload":"","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":1960,"wires":[["c6d86b83.360a78"]]},{"id":"b0e3b9d1.725fb8","type":"debug","z":"c887d9a.5ebdb28","name":"LOOP","active":true,"console":"false","complete":"true","x":930,"y":1860,"wires":[]},{"id":"2461fe59.631282","type":"MSSQL-CN","z":"","name":"flextime","server":"192.168.0.1","encyption":true,"database":"FLEXTIME"}]